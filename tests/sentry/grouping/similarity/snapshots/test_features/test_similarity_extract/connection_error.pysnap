---
created: '2020-07-22T12:08:08.353284Z'
creator: sentry
source: tests/sentry/grouping/similarity/test_features.py
---
newstyle:2019-10-29:message:character-5-shingle:
- '%s.pr'
- .proc
- _erro
- cess_
- error
- ess_e
- ocess
- proce
- roces
- s.pro
- s_err
- ss_er
newstyle:2019-10-29:stacktrace:frames-pairs:
- - - - context-line:ident-shingle
      - 'context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)'
    - - filename:ident-shingle
      - services.py
    - - function:ident-shingle
      - <lambda>
    - - module:ident-shingle
      - sentry.utils.services
  - - - context-line:ident-shingle
      - return super(SubscriptionQuota, self).is_rate_limited(project, key=key)
    - - filename:ident-shingle
      - quotas.py
    - - function:ident-shingle
      - is_rate_limited
    - - module:ident-shingle
      - getsentry.quotas
- - - - context-line:ident-shingle
      - rejections = is_rate_limited(client, keys, args)
    - - filename:ident-shingle
      - redis.py
    - - function:ident-shingle
      - is_rate_limited
    - - module:ident-shingle
      - sentry.quotas.redis
  - - - context-line:ident-shingle
      - return script(keys, args, client)
    - - filename:ident-shingle
      - redis.py
    - - function:ident-shingle
      - call_script
    - - module:ident-shingle
      - sentry.utils.redis
- - - - context-line:ident-shingle
      - response = connection.read_response()
    - - filename:ident-shingle
      - client.py
    - - function:ident-shingle
      - parse_response
    - - module:ident-shingle
      - redis.client
  - - - context-line:ident-shingle
      - response = self._parser.read_response()
    - - filename:ident-shingle
      - connection.py
    - - function:ident-shingle
      - read_response
    - - module:ident-shingle
      - redis.connection
- - - - context-line:ident-shingle
      - response = self._parser.read_response()
    - - filename:ident-shingle
      - connection.py
    - - function:ident-shingle
      - read_response
    - - module:ident-shingle
      - redis.connection
  - - - context-line:ident-shingle
      - (e.args,))
    - - filename:ident-shingle
      - connection.py
    - - function:ident-shingle
      - read_response
    - - module:ident-shingle
      - redis.connection
- - - - context-line:ident-shingle
      - result = func(*args, **kwargs)
    - - filename:ident-shingle
      - safe.py
    - - function:ident-shingle
      - safe_execute
    - - module:ident-shingle
      - sentry.utils.safe
  - - - context-line:ident-shingle
      - 'context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)'
    - - filename:ident-shingle
      - services.py
    - - function:ident-shingle
      - <lambda>
    - - module:ident-shingle
      - sentry.utils.services
- - - - context-line:ident-shingle
      - return client.evalsha(self.sha, len(keys), *args)
    - - filename:ident-shingle
      - client.py
    - - function:ident-shingle
      - __call__
    - - module:ident-shingle
      - redis.client
  - - - context-line:ident-shingle
      - return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)
    - - filename:ident-shingle
      - client.py
    - - function:ident-shingle
      - evalsha
    - - module:ident-shingle
      - redis.client
- - - - context-line:ident-shingle
      - return script(keys, args, client)
    - - filename:ident-shingle
      - redis.py
    - - function:ident-shingle
      - call_script
    - - module:ident-shingle
      - sentry.utils.redis
  - - - context-line:ident-shingle
      - return client.evalsha(self.sha, len(keys), *args)
    - - filename:ident-shingle
      - client.py
    - - function:ident-shingle
      - __call__
    - - module:ident-shingle
      - redis.client
- - - - context-line:ident-shingle
      - return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)
    - - filename:ident-shingle
      - client.py
    - - function:ident-shingle
      - evalsha
    - - module:ident-shingle
      - redis.client
  - - - context-line:ident-shingle
      - return self.parse_response(connection, command_name, **options)
    - - filename:ident-shingle
      - client.py
    - - function:ident-shingle
      - execute_command
    - - module:ident-shingle
      - redis.client
- - - - context-line:ident-shingle
      - return self.parse_response(connection, command_name, **options)
    - - filename:ident-shingle
      - client.py
    - - function:ident-shingle
      - execute_command
    - - module:ident-shingle
      - redis.client
  - - - context-line:ident-shingle
      - response = connection.read_response()
    - - filename:ident-shingle
      - client.py
    - - function:ident-shingle
      - parse_response
    - - module:ident-shingle
      - redis.client
- - - - context-line:ident-shingle
      - return super(SubscriptionQuota, self).is_rate_limited(project, key=key)
    - - filename:ident-shingle
      - quotas.py
    - - function:ident-shingle
      - is_rate_limited
    - - module:ident-shingle
      - getsentry.quotas
  - - - context-line:ident-shingle
      - rejections = is_rate_limited(client, keys, args)
    - - filename:ident-shingle
      - redis.py
    - - function:ident-shingle
      - is_rate_limited
    - - module:ident-shingle
      - sentry.quotas.redis
newstyle:2019-10-29:type:ident-shingle:
- ConnectionError
newstyle:2019-10-29:value:character-5-shingle:
- ' (''Co'
- ' by s'
- ' clos'
- ' from'
- ' read'
- ' serv'
- ' sock'
- ' whil'
- '''Conn'
- ('Con
- ': (''C'
- Conne
- Error
- ading
- by se
- 'cket:'
- close
- ction
- 'd by '
- 'ding '
- e rea
- eadin
- ectio
- ed by
- er.',
- erver
- 'et: ('
- 'from '
- g fro
- 'hile '
- ile r
- ing f
- ion c
- 'ket: '
- le re
- losed
- m soc
- n clo
- necti
- ng fr
- nnect
- ocket
- om so
- on cl
- onnec
- or wh
- 'osed '
- r whi
- r.',)
- readi
- rom s
- ror w
- 'rror '
- rver.
- sed b
- serve
- socke
- 't: ('''
- 'tion '
- ver.'
- while
- y ser
